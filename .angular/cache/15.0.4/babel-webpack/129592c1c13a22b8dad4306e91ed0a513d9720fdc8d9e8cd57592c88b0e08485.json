{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/core/service/auth.service\";\nimport * as i4 from \"@angular/material/legacy-form-field\";\nimport * as i5 from \"@angular/material/legacy-input\";\nimport * as i6 from \"@angular/material/legacy-button\";\nimport * as i7 from \"@angular/material/legacy-card\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formbuilder, router, authservice) {\n      this.formbuilder = formbuilder;\n      this.router = router;\n      this.authservice = authservice;\n      this.buildForm();\n    }\n    ngOnInit() {}\n    login(event) {\n      event.preventDefault();\n      if (this.form.valid) {\n        const value = this.form.value;\n        this.authservice.login(value.email, value.password).then(() => {\n          this.router.navigate(['/admin']).catch(() => {\n            alert('no es valido');\n          });\n        });\n      }\n    }\n    buildForm() {\n      this.form = this.formbuilder.group({\n        email: ['', [Validators.required]],\n        password: ['', [Validators.required]]\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-xs\"], [\"placeholder\", \"email\", \"formControlName\", \"email\", \"matInput\", \"\", \"type\", \"email\"], [\"placeholder\", \"password\", \"formControlName\", \"password\", \"matInput\", \"\", \"type\", \"password\"], [\"mat-raised-button\", \"\", \"type\", \"submit\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener($event) {\n          return ctx.login($event);\n        });\n        i0.ɵɵelementStart(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"div\", 1)(7, \"div\", 2)(8, \"mat-form-field\");\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 2)(12, \"mat-form-field\");\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(14, \"mat-card-actions\")(15, \"button\", 5);\n        i0.ɵɵtext(16, \"Ingresar\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i4.MatLegacyFormField, i5.MatLegacyInput, i6.MatLegacyButton, i7.MatLegacyCard, i7.MatLegacyCardHeader, i7.MatLegacyCardContent, i7.MatLegacyCardTitle, i7.MatLegacyCardActions, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}